<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My First Blog Post</title>
    <url>/2022/12/16/My-First-Blog-Post/</url>
    <content><![CDATA[<p>this is my first blog<br>so cool<br>by hophiya</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/12/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>implement blogs</title>
    <url>/2022/12/17/implement-blogs/</url>
    <content><![CDATA[<p><strong>部署blog步骤</strong></p>
<h2 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h2><ol>
<li><p>在着手搭建博客之前，需要准备以下环境&amp;技术。</p>
</li>
<li><p>一台电脑，PC&#x2F;Mac 均可。</p>
</li>
<li><p>不算太差的网络环境。</p>
</li>
<li><p>Markdown 基本语法，为了后面的博客写作使用。</p>
</li>
<li><p>一个 GitHub 账号。</p>
</li>
</ol>
<h2 id="安装和配置-Git"><a href="#安装和配置-Git" class="headerlink" title="安装和配置 Git"></a>安装和配置 Git</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<h3 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h3><p>在首次安装 Git 后，需要对其进行配置，添加用户的名称与邮箱。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ git config --global user.name &quot;githubname&quot;</span><br><span class="line"></span><br><span class="line">$ git config --global user.email &quot;name@mail.com&quot;</span><br></pre></td></tr></table></figure>

<p>另外为了让本地安装的 Git 能够顺利提交代码到 GitHub 上，还需要生成密钥。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ ssh-keygen -t rsa -C &quot;name@mail.com&quot;</span><br></pre></td></tr></table></figure>

<h3 id="配置-GitHub"><a href="#配置-GitHub" class="headerlink" title="配置 GitHub"></a>配置 GitHub</h3><p>访问 GitHub 网站，并登录你的账号，如果没有账号可以注册一个。</p>
<p>依次点击右上角【头像】-【Settings】-【SSH and GPG keys】-【SSH keys】-【New SSH key】。</p>
<p>在 Title 中填上任意名字，并在 Key 中将上一步的公钥文件中的内容复制粘贴进去，然后点击【Add SSH key】。此时本地安装的 Git 应该已经可以顺利提交代码到你的 GitHub 账号了。</p>
<h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>Windows 环境下安装 Node.js</p>
<p>推荐使用 nvs 来安装 Node.js 。</p>
<p>首先下载并安装 nvs 。打开 PowerShell ，执行以下命令来使用淘宝源安装LTS版本的 Node.js ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; nvs remote add taobao https://npm.taobao.org/mirrors/node/</span><br><span class="line">nvs add taobao/lts</span><br><span class="line">nvs use taobao/lts</span><br><span class="line">nvs link taobao/lts</span><br></pre></td></tr></table></figure>
<p>MacOS 环境下安装 Node.js</p>
<p>推荐使用 Homebrew 来安装 Node.js 。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ brew install node</span><br></pre></td></tr></table></figure>
<h2 id="安装和配置-Hexo"><a href="#安装和配置-Hexo" class="headerlink" title="安装和配置 Hexo"></a>安装和配置 Hexo</h2><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>在命令行工具中，执行以下命令来安装 Hexo ：</p>
<p>初始化 Hexo 项目打开命令行工具并进入想要作为博客目录的父目录中，执行以下命令，初始化 Hexo 项目目录。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npx hexo init &lt;folder_name&gt;</span><br><span class="line"></span><br><span class="line">$ cd &lt;folder_name&gt;</span><br><span class="line"></span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>对 Hexo 项目进行基本配置Hexo 项目目录下的_config.yml文件是 Hexo 的站点配置文件，一些常规配置项都在此文件中进行配置。编辑该文件，我们来进行一些基础配置。修改站点名称修改站点配置文件的title配置项，例如修改为：title: Just Another Blog此时网站名称将修改为Just Another Blog。修改作者名称修改站点配置文件的author配置项，例如修改为：author: Ruka Kayamori此时网站作者将修改为Ruka Kayamori。启动本地 Hexo Server执行以下命令可以启动本地服务。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line"></span><br><span class="line">$ hexo g</span><br><span class="line"></span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>
<p>默认的本地访问地址是<a href="http://localhost:4000。">http://localhost:4000。</a></p>
<p>上面是最初始的博客页面，里面会有一篇自带的 Hello World 博文。</p>
<h2 id="编写博文"><a href="#编写博文" class="headerlink" title="编写博文"></a>编写博文</h2><p>创建新的博文文件在 Hexo 项目目录中，执行以下命令可以创建一篇新的博文文件。</p>
<p>其中，layout代表新建的文件的布局名称，默认为post，即博文；也可以选择draft，即草稿，草稿默认不会显示在 Hexo 页面中，在执行过hexo publish命令后会将草稿发布为博文。title为博文的标题。</p>
<p>将 Hexo 项目部署到 GitHub Pages</p>
<p>安装 hexo-deployer-git 插件</p>
<p>在 Hexo 项目目录中，执行以下命令来安装必要的插件。</p>
<h3 id="编辑-Hexo-站点配置"><a href="#编辑-Hexo-站点配置" class="headerlink" title="编辑 Hexo 站点配置"></a>编辑 Hexo 站点配置</h3><p>打开 Hexo 项目的站点配置文件，并修改url配置项。然后再编辑deploy配置项及其子项。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h2 id="创建-GitHub-Repo"><a href="#创建-GitHub-Repo" class="headerlink" title="创建 GitHub Repo"></a>创建 GitHub Repo</h2><p>在 GitHub 首页登录你的账号，然后点击右上方的+，再点击New repository。在Repository name中输入&lt;你的GitHub用户名&gt;.github.io，其他保持不变即可，再点击Create repository即可完成 Repo 的创建。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /Users/allen/Project/blog/hexo/_config.yml</span><br><span class="line"></span><br><span class="line">url: https://githubname.github.io</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo: https://githubname/githubname.github.io</span><br></pre></td></tr></table></figure>
<p>注意点：</p>
<ol>
<li>Github后续更新了默认主分支的名称，已经不叫master了，改为了main，如果还是写master，并不会报错，但是会在main分支之外新建一个master分支 </li>
<li>repository一栏必须填ssh的地址，因为GitHub的密码验证于2021年8月13日不再支持，也就是不能再用密码方式去提交代码。要使用personal access token替代，当然这里我建议用SSH免密登陆，具体GitHub如何配置SSH免密登陆的步骤参考上面</li>
</ol>
<h2 id="部署项目"><a href="#部署项目" class="headerlink" title="部署项目"></a>部署项目</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -d</span><br></pre></td></tr></table></figure>
<p>在 Hexo 项目目录中，执行以下命令来将项目部署到 GitHub Pages。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line"></span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>后续有新的博文更新或者是配置变更，都通过重复本步骤来部署到 GitHub Pages 中。</p>
<h2 id="启用-GitHub-Pages-服务在"><a href="#启用-GitHub-Pages-服务在" class="headerlink" title="启用 GitHub Pages 服务在"></a>启用 GitHub Pages 服务在</h2><p>GitHub 上打开&lt;你的GitHub用户名&gt;.github.io项目，点击Settings，再点击Pages，选择master分支后点击Save。</p>
<p>启用配置后，可能需要稍等一段时间（半小时左右），GitHub 才会刷新CDN缓存。</p>
<h2 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h2><p>访问https:&#x2F;&#x2F;&lt;你的GitHub用户名&gt;.github.io&#x2F;即可在公网上查看我们的博客页面。</p>
<p>至此基础部署完成，但默认主题看起来比较单调，可进行配置</p>
<h2 id="安装-NexT-主题"><a href="#安装-NexT-主题" class="headerlink" title="安装 NexT 主题"></a>安装 NexT 主题</h2><p>在 Hexo 目录中执行以下命令来安装 NexT 主题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-theme-next</span><br></pre></td></tr></table></figure>
<h3 id="启用-NexT-主题"><a href="#启用-NexT-主题" class="headerlink" title="启用 NexT 主题"></a>启用 NexT 主题</h3><p>打开 Hexo 项目的站点配置文件，并修改theme配置项。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<h3 id="创建主题配置文件"><a href="#创建主题配置文件" class="headerlink" title="创建主题配置文件"></a>创建主题配置文件</h3><p>在 Hexo 项目根目录，创建一个名为_config.<theme_name>.yml的空文件。</p>
<p>例如我们是 NexT 主题，那么就创建_config.next.yml文件。</p>
<p>然后我们将 Hexo 项目根目录下的node_modules&#x2F;hexo-theme-next&#x2F;_config.yml文件中的全部内容拷贝到_config.next.yml文件中。</p>
<p>后续我们将_config.next.yml文件称为主题配置文件，以区别站点配置文件。</p>
<h3 id="更改-NexT-主题显示方案"><a href="#更改-NexT-主题显示方案" class="headerlink" title="更改 NexT 主题显示方案"></a>更改 NexT 主题显示方案</h3><p>NexT 主题拥有4种显示方案，分别是Muse、Mist、Pisces和Gemini，默认配置为Muse。如果要修改显示方案，打开主题配置文件，修改scheme配置项即可，例如修改为Pisces方案。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>
<p>刷新到github page较慢，可通过<code>hexo d</code> 启动本地服务调试查看，本地地址查看：</p>
<p><a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p>至此部署环境基本完成，如果与更深更个性化的部署需求，比如主题更改等，可详细参考官网，接下来是主要的博文编写发布</p>
<h2 id="发布博文"><a href="#发布博文" class="headerlink" title="发布博文"></a>发布博文</h2><h3 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;页面名称&quot;</span><br></pre></td></tr></table></figure>
<p>–建在 hexo&#x2F;source下</p>
<h3 id="新建博文"><a href="#新建博文" class="headerlink" title="新建博文"></a>新建博文</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;页面名称&quot; &quot;文章题目&quot;</span><br></pre></td></tr></table></figure>
<p>“页面名称”如果不填默认在post 下</p>
<h3 id="编辑博文"><a href="#编辑博文" class="headerlink" title="编辑博文"></a>编辑博文</h3><p>文本编辑器打开博文，markdown格式，比如typora</p>
<h3 id="发布到github"><a href="#发布到github" class="headerlink" title="发布到github"></a>发布到github</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean hexo deploy</span><br></pre></td></tr></table></figure>

<p>如果暂时不想发布，写草稿，并进行本地预览：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new draft test</span><br><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure>
<p>如果准备发布草稿：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo publish test</span><br></pre></td></tr></table></figure>

<h2 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h2><h3 id="新建相关文件夹"><a href="#新建相关文件夹" class="headerlink" title="新建相关文件夹"></a>新建相关文件夹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir source/html</span><br></pre></td></tr></table></figure>
<p>在 blog 的源文件夹下找到 source 文件夹，在该文件夹下新建一个文件夹用来储存后继需要部署的 html 文件。该文件夹下可以新建子文件夹，方便存放 css、js文件。</p>
<h3 id="关闭渲染"><a href="#关闭渲染" class="headerlink" title="关闭渲染"></a>关闭渲染</h3><p>自定义的 html 文件需要跳过渲染，否则会像文章页、标签页一样，无法自己编辑格式：<br>在 config.yml 文件里（注意是Hexo本身自带的config.yml，不是主题带的config.yml）找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">skip_render:                #跳过指定渲染，可用glob来匹配路径</span><br></pre></td></tr></table></figure>
<p>在后面添加文件或文件夹路径即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- &quot;html/**&quot;               #跳过html文件夹下所有子文件夹和文件的渲染</span><br></pre></td></tr></table></figure>
<p>记得加’-‘；具体可参考 <a href="https://blog.csdn.net/weixin_58068682/article/details/116611715">Chak Aciano的文章</a></p>
<h3 id="添加链接至首页"><a href="#添加链接至首页" class="headerlink" title="添加链接至首页"></a>添加链接至首页</h3><p>在 _config.next.yml 文件下（即自己安装的主题的config文件）找到 menu ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">   首页: / || fas fa-home</span><br><span class="line">   归档: /archives/ || fas fa-archive</span><br><span class="line">   标签: /tags/ || fas fa-tags</span><br><span class="line">   分类: /categories/ || fas fa-folder-open</span><br><span class="line">   #清单||fas fa-list:</span><br><span class="line">     #音乐: /music/ || fas fa-music</span><br><span class="line">     #电影: /movies/ || fas fa-video</span><br><span class="line">   友链: /link/ || fas fa-link</span><br><span class="line">   #关于: /about/ || fas fa-heart</span><br><span class="line">   简历: /html/resume/resume.htm || fas fa-file-user</span><br></pre></td></tr></table></figure>

<p>创建页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">hexo new page categories</span><br><span class="line">hexo new page link</span><br><span class="line">hexo new page about</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><h3 id="统计阅读时间"><a href="#统计阅读时间" class="headerlink" title="统计阅读时间"></a>统计阅读时间</h3><p>文章添加阅读时间，npm安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure>

<p>在 Hexo 的配置文件中加入下面的配置（这里的字长已经评价时间是按照中文配置的，英文 &#x2F; 中英混合需要修改 awl 以及 wpm 参数）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 3</span><br><span class="line">  wpm: 200</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>
<p>确认 NexT 的配置（默认就是这个不必添加修改，确认一下存在无误即可）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br></pre></td></tr></table></figure>

<h3 id="盘古插件"><a href="#盘古插件" class="headerlink" title="盘古插件"></a>盘古插件</h3><p>方便显示，在中英文已经数字符合等合适位置加入一下空格间隔以美化 UI。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pangu: true</span><br></pre></td></tr></table></figure>

<h3 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h3><p>NexT 主题自带了一个搜索功能 Local Search，即在编译文件时本地生成一个数据库，放在网站根目录下，用户借助此数据库进行搜索查询。 安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>
<p>在 NexT 的配置文件中打开：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>


<h3 id="文末添加今日诗词"><a href="#文末添加今日诗词" class="headerlink" title="文末添加今日诗词"></a>文末添加今日诗词</h3><p>给个人博客添加一些人文气息，文末调用今日诗词的 API 根据访问的时间地点等智能推荐一句诗词，参考官方提供的接口文档，使用高级安装代码以显示更多信息。</p>
<h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir source/_data</span><br></pre></td></tr></table></figure>

<p>首先通过主题配置将自定义页尾项取消注释：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">  postBodyEnd: source/_data/post-body-end.njk</span><br></pre></td></tr></table></figure>
<p>然后新建文件 source&#x2F;_data&#x2F;post-body-end.njk，并在其中加入下面内容即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim source/_data/post-body-end.njk</span><br><span class="line">&lt;script src=&quot;//sdk.jinrishici.com/v2/browser/jinrishici.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  jinrishici.load((result) =&gt; &#123;</span><br><span class="line">    let jrsc = document.getElementById(&#x27;jrsc&#x27;);</span><br><span class="line">    const data = result.data;</span><br><span class="line">    let author = data.origin.author;</span><br><span class="line">    let title = &#x27;《&#x27; + data.origin.title + &#x27;》&#x27;;</span><br><span class="line">    let content = data.content.substr(0, data.content.length - 1);</span><br><span class="line">    let dynasty = data.origin.dynasty.substr(0, data.origin.dynasty.length - 1);</span><br><span class="line">    jrsc.innerText = content + &#x27; @ &#x27; + dynasty + &#x27;·&#x27; + author + title;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div style=&quot;text-align: center&quot;&gt;&lt;span id=&quot;jrsc&quot; &gt;正在加载今日诗词....&lt;/span&gt;&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="同步生成文件夹"><a href="#同步生成文件夹" class="headerlink" title="同步生成文件夹"></a>同步生成文件夹</h3><p>将每篇博客对应生成一个文件夹目录（方便插入图片等附件）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>


<h3 id="博文添加更新时间"><a href="#博文添加更新时间" class="headerlink" title="博文添加更新时间"></a>博文添加更新时间</h3><p>更新模板：<em>scaffolds&#x2F;post.md</em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">update: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a>添加分类</h3><p>生成分类目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>在categories目录中有一个index.md文件，在文件中添加type: categories<br>在categories目录中有一个index.md文件，多个分类可以复制多份</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim source/categories/index.md</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 分类一</span><br><span class="line">date: 2022-12-18 00:19:23</span><br><span class="line">type: categories</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">title: 分类二</span><br><span class="line">date: 2022-12-18 00:19:23</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>给文章添加”分类”属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 2022-12-18 00:19:23</span><br><span class="line">categories: 分类一</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h3 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a>添加标签</h3><p>生成标签目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<p>在tags目录中有一个index.md文件，在文件中添加type: tags</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim source/tags/index.md</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 标签一</span><br><span class="line">date: 2022-12-18 00:19:23</span><br><span class="line">type: tags</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 标签二</span><br><span class="line">date: 2022-12-18 00:19:23</span><br><span class="line">type: tags</span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>给文章添加”标签”属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 2022-12-18 00:19:23</span><br><span class="line">categories: 分类</span><br><span class="line">tags:</span><br><span class="line">  - 标签一</span><br><span class="line">  - 标签二</span><br><span class="line">---</span><br></pre></td></tr></table></figure>


<h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><h3 id="添加浏览量"><a href="#添加浏览量" class="headerlink" title="添加浏览量"></a>添加浏览量</h3><p>本文部署过程参考： </p>
<p><a href="https://hexo.io/zh-cn/docs/">hexo官方手册</a></p>
<p><a href="https://www.zhihu.com/question/20463581/answer/2492289487">如何搭建个人独立博客？</a></p>
<p><a href="https://www.jianshu.com/p/745eacc56227">Github Pages搭建个人博客(最新版)</a></p>
<p><a href="http://home.ustc.edu.cn/~liujunyan/blog/hexo-next-theme-config/#hexo-%E5%AE%89%E8%A3%85">Hexo 博客 NexT 主题的安装使用</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/525469921">Hexo创建自定义页面</a></p>
<p><a href="https://github.com/theme-next/hexo-symbols-count-time">博客字数以及阅读时间估计插件</a></p>
<p><a href="https://www.jianshu.com/p/98ce38df7f87">Hexo博客：二、添加分类及标签</a></p>
<p><a href="https://www.zhihu.com/question/47405173/answer/2348712269?utm_id=0">github+hexo搭建博客怎么增加评论和浏览量功能？</a></p>
<p><a href="https://valine.js.org/quickstart.html">valine</a><br>一并感谢</p>
]]></content>
      <categories>
        <category>技术杂谈</category>
      </categories>
      <tags>
        <tag>github page</tag>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>凡尘拾萃</title>
    <url>/2022/12/18/%E5%87%A1%E5%B0%98%E6%8B%BE%E8%90%83/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
